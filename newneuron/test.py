import numpy as np


# def softmax(t):
#     out = np.exp(t)
#     return out / np.sum(out)

# print(softmax([3, 6, 5, 52, 52]))

# print(np.exp(3))

# print(2.718281 ** 3)

# x = np.array([5.1, 3.5, 1.4, 0.2])

# W1 = np.array([[ 0.33462099,  0.10068401,  0.20557238, -0.19043767,  0.40249301, -0.00925352,  0.00628916,  0.74784975,  0.25069956, -0.09290041 ],
#                [ 0.41689589,  0.93211640, -0.32300143, -0.13845456,  0.58598293, -0.29140373, -0.28473491,  0.48021000, -0.32318306, -0.34146461 ],
#                [-0.21927019, -0.76135162, -0.11721704,  0.92123373,  0.19501658,  0.00904006,  1.03040632, -0.66867859, -0.01571104, -0.08372566 ],
#                [-0.67791724,  0.07044558, -0.40981071,  0.62098450, -0.33009159, -0.47352435,  0.09687051, -0.68724299,  0.43823402, -0.26574543 ]])

# b1 =  np.array([-0.34133575, -0.24401602, -0.06262318, -0.30410971, -0.37097632,  0.02670964, -0.51851308,  0.54665141,  0.20777536, -0.29905165 ])

# t1 = x @ W1 + b1

# print(t1)

mat1 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
mat2 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

mat3 = mat1 @ mat2

print(mat3)